package com.kh.springdb.vo;

import jakarta.persistence.*;
import lombok.Getter;
import lombok.Setter;

@Entity
@Getter
@Setter
@Table(name="ProductItem")
public class Product {
	@Id
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "sequence_name")
	@SequenceGenerator(name = "product_sequence", sequenceName="PRODUCT_SEQ", allocationSize = 1)
	//MySQL => @GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name="product_id")
	private int product_id;
	@Column(nullable = false, length = 50)
	private String product_name;
	@Column(nullable = false, length = 50)
	private String category;
	@Column(name="price")
	private int price;
}

/**
 	@Table : 테이블 이름을 지정
 	@Id : 해당 필드가 엔티티의 primary key임을 나타냄 
 	@Column : 해당 필드가 데이터베이스 테이블의 컬럼에 매핑되는 것을 확인할 수 있음 
 		nullable : 해당 컬럼이 null값을 허용하는지 여부를 나타냄
 		length : 문자열 컬럼의 최대 길이를 지정 
 		String으로 시작되는 필드 값의 경우 String으로 지정된 이름으로 명시되기 때문에 따로 이름을 지정해주지 않아도 되지만
 		String 이외의 값은 name을 설정해주어 Column 명을 지정해주는 것이 원칙 
 		
 	
 	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "sequence_name")
	@SequenceGenerator(name = "product_sequence", sequenceName="PRODUCT_SEQ", allocationSize = 1)
	
	
	//데이터베이스 자체에서 값이 증가할 수 있도록 자동생성이 들어있는 경우 아래 어노테이션 방식을 사용
	 * 새로운 레코드가 삽일될 때마다 데이터베이스가 자동으로 기본키의 값을 증가시킴
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	
 		
 */
