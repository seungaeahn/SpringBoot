package com.kh.springdb.service;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;

import com.kh.springdb.repositiry.ProductRepository;
import com.kh.springdb.vo.Product;

@Service
public class ProductService {
	//인터페이스를 사용해서 데이터베이스와 상호작용하는데 사용함 
	//레포지토리를 나타내는 필드
	//final로 선언돼서 변경이 불가능 
	private final ProductRepository productRepository;
	
	@Autowired //생성자 위한 어노테이션으로 스프링은 ProductRepository 타입의 빈을 찾아서 주입 
	public ProductService(ProductRepository productRepository) {
		this.productRepository = productRepository;
	}
	
	//모든 상품을 조회하는 메서드 
	//Repository findAll 지정된 메서드를 가지고 와서 사용
	public List<Product> getAllProducts() {
		return productRepository.findAll();
	}
	
	//상품 한개만 조회하는 메서드
	public Optional<Product> getProductById(Long Id){
		return productRepository.findById(Id);
	}
	@GetMapping("/{Id}")
	public String getProductById(@PathVariable Long id, Model model) {
		Optional<Product> product = productService.getProductById(id);
		product.ifPresent(value -> model.addAttribute("product", value));
		return "product_datail";
	}
	//저장하는 메서드
	
	
	//삭제하는 메서드 
}

/*
 	Optional : 제품의 존재 여부를 체크할 수 있게 해주는 객체
 	
 */






















