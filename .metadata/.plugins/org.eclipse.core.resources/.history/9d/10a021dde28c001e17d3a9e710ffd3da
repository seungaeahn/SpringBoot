package com.kh.springdb.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;

import com.kh.springdb.model.Board;
import com.kh.springdb.service.BoardService;

@Controller
@RequestMapping("/boards")
public class BoardController {
	
	@Autowired
	private BoardService boardService;
	
	@GetMapping //("/boards")생략
	public String getAllBoards(Model model) {
		//게시물 전체보는 Controller
		List<Board> boards = boardService.getAllBoards();
		model.addAttribute("boards", boards);
		return "boardLists";
	}
	
	@GetMapping //("/boards")생략
	public String getBoardById(Model model) {
		Board board = boardService.getBoardById(boardId);
		model.addAttribute("board", board);
		return "board-detail";
	}
	
	@GetMapping("/create") //HTTP GET 요청이 /create 라는 경로로 들어올 때 호출
	public String displayCreateForm(Model model) { 
		//Model 캑체를 매개변수로 받아서 templates(view)으로 데이터를 전달할 수
		model.addAttribute("board", new Board()); 
		//new Board로 새로운 Board 객체를 생성해서 모델에 추가 템플릿에서 해당 뷰를 보여줌 
		return "board-form";
	}
	
	@PostMapping()
	public String ( ) {
		
	}
	
	
	
	@GetMapping
	public String insertBoard(@ModelAttribute("board") @Validated Board board, BindingResult result) {
		boardService.updateBoard(board);
		return "redirect:/boardLists";
	}
}
